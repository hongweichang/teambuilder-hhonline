using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using HHOnline.News.Components;
using HHOnline.Common;
using HHOnline.News.Enums;

namespace HHOnline.News.Providers
{
	/// <summary>
	/// 文章转换辅助类
	/// </summary>
	public static class ArticleReaderConverter
	{
		/// <summary>
		/// 获取文章
		/// </summary>
		/// <param name="dr"></param>
		public static Article ParseArticle(IDataReader dr)
		{
			// TODO:
			return null;
		}

		/// <summary>
		/// 资源
		/// </summary>
		/// <param name="dr"></param>
		/// <returns></returns>
		public static ArticleAttachment ParseArticleAttachment(IDataReader dr)
		{
			return new ArticleAttachment()
			{
				ID = DataRecordHelper.GetInt32(dr, "AttachmentID"),
				FileName = DataRecordHelper.GetString(dr, "FileName"),
				Name = DataRecordHelper.GetString(dr, "AttachmentName"),
				ContentType = DataRecordHelper.GetString(dr, "ContentType"),
				ContentSize = DataRecordHelper.GetInt32(dr, "ContentSize"),
				ImageWidth = DataRecordHelper.GetNullableInt32(dr, "ImageWidth"),
				ImageHeight = DataRecordHelper.GetNullableInt32(dr, "ImageHeight"),
				IsRemote = DataRecordHelper.GetBoolean(dr, "IsRemote"),
				UploadDateTime = DataRecordHelper.GetDateTime(dr, "UploadDateTime"),
			};
		}

		/// <summary>
		/// 作者
		/// </summary>
		/// <param name="dr"></param>
		/// <returns></returns>
		public static ArticleAuthor ParseArticleAuthor(IDataReader dr)
		{
			return new ArticleAuthor()
			{
				ID = DataRecordHelper.GetInt32(dr, "AuthorID"),
				Name = DataRecordHelper.GetString(dr, "Name"),
			};
		}

		/// <summary>
		/// 分类
		/// </summary>
		/// <param name="dr"></param>
		/// <returns></returns>
		public static ArticleCategory ParseArticleCategory(IDataReader dr)
		{
			return new ArticleCategory()
			{
				ID = DataRecordHelper.GetInt32(dr, "CategoryID"),
				Code = DataRecordHelper.GetString(dr, "CategoryCode"),
				Name = DataRecordHelper.GetString(dr, "CategoryName"),
				ParentID = DataRecordHelper.GetNullableInt32(dr, "ParentID"),
				Description = DataRecordHelper.GetString(dr, "CategoryDesc"),
				Status = (CategoryStatus)DataRecordHelper.GetInt32(dr, "CategoryStatus"),
				DateCreated = DataRecordHelper.GetDateTime(dr, "DateCreated"),
				DisplayOrder = DataRecordHelper.GetInt32(dr, "DisplayOrder"),
			};
		}

		/// <summary>
		/// 标题前缀
		/// </summary>
		/// <param name="dr"></param>
		/// <returns></returns>
		public static TitlePrefixes ParseTitlePrefixes(IDataReader dr)
		{
			return new TitlePrefixes()
			{
				ID = DataRecordHelper.GetInt32(dr, "TitleID"),
				Name = DataRecordHelper.GetString(dr, "Name"),
			};
		}
	}
}
